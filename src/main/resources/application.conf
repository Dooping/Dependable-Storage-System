akka{
	log-dead-letters = 10
	log-dead-letters-during-shutdown = on
	actor{
		provider = "akka.remote.RemoteActorRefProvider"
	}
	remote{
		enabled-transports = ["akka.remote.netty.ssl"]
	    netty.tcp {
	      enable-ssl = true
	    }
	    netty.ssl = ${akka.remote.netty.tcp}
	    netty.ssl{
	      security {
	      	require-mutual-authentication = on
	        key-store = "./server.jks"
	        key-store-password = "changeit"
	        key-password = "changeit"
	        trust-store = "./client.jks"
	        trust-store-password = "changeit"
		        protocol = "TLSv1"
      			enabled-algorithms = [TLS_RSA_WITH_AES_128_CBC_SHA]
  				random-number-generator = "AES128CounterSecureRNG"
	      }
	    }
	}
}

Spawner1.akka.remote.netty.ssl.port = 2552
Spawner2.akka.remote.netty.ssl.port = 2553

RemoteCreation{
	akka{
  		loglevel = "INFO"
		actor{
			deployment{
				/proxy/router1 {
				    router = round-robin-pool
				    nr-of-instances = 7
				    target.nodes = ["akka.ssl.tcp://Spawner1@localhost:2552", "akka.ssl.tcp://Spawner2@localhost:2553"]
  				}
			}
		}
		remote.netty.ssl.port = 2558
	}
}

Proxy{
	akka{
		actor{
			deployment{
				/proxy/router1 {
				    router = round-robin-group
				    routees.paths = [
				      "akka.ssl.tcp://Spawner1@127.0.0.1:2552/user/r1",
				      "akka.ssl.tcp://Spawner1@127.0.0.1:2552/user/r2",
				      "akka.ssl.tcp://Spawner1@127.0.0.1:2552/user/r3",
				      "akka.ssl.tcp://Spawner1@127.0.0.1:2552/user/r4",
				      "akka.ssl.tcp://Spawner2@127.0.0.1:2553/user/r1",
				      "akka.ssl.tcp://Spawner2@127.0.0.1:2553/user/r2",
				      "akka.ssl.tcp://Spawner2@127.0.0.1:2553/user/r3"]
  				}
			}
		}
		remote.netty.ssl.port = 2562
	}
}